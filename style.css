:root {
  --c-primary: #ef5350;
  --c-primary--dark: #c83432;
  --c-secondary: #fcd64d;
  --c-accent: #1c88cc;
  --c-accent--dark: #117dc0;
  --c-white: #fff;
  --c-text: #263238;
  --c-grey: #dfdede;
  --m-gutter: 1rem;
  --f-ranchers: 'Ranchers', cursive;
  --f-roboto: 'Roboto', sans-serif;
  --transition-speed: 300ms;
}

/* Box Sizing */
html {
  font-size: 15px;
  box-sizing: border-box;
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: var(--f-roboto);
  color: var(--c-text);
}

p {
  line-height: 1.5;
}

a {
  color: inherit;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

button {
  border: 0;
  cursor: pointer;
}

/* Layout */
.site-wrapper {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.site-wrapper main {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  overflow-y: hidden;
}

.section {
  padding: 1rem;
}

.container {
  max-width: 800px;
  margin: 0 auto;
}

/* Header */
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  background-color: var(--c-primary);
}

.header__logo {
  font-size: 2rem;
  font-family: var(--f-ranchers);
  color: var(--c-secondary);
  -webkit-text-fill-color: var(--c-secondary); /* Will override color (regardless of order) */
  -webkit-text-stroke-width: 2px;
  -webkit-text-stroke-color: var(--c-accent);
  transform: rotate(-2deg) skew(1deg, 1deg);
}

.header__nav {
  display: flex;
  font-weight: bold;
  text-transform: uppercase;
  color: var(--c-white);
}

.header__nav a {
  display: block;
}

.header__nav a:hover {
  text-decoration: underline;
}

.header__nav > * + * {
  margin-left: 1rem;
}

/* Main */
main a,
footer a {
  color: var(--c-accent);
}

/* Buttons */
.btn {
  display: inline-block;
  padding: 0.75rem 1rem;
  border-radius: 2px;
  text-transform: capitalize;
  color: var(--c-white);
  background-color: var(--c-accent);
  transition: background-color 300ms;
}

.btn:hover {
  background-color: var(--c-accent--dark);
}


/* Search Section */
.search-wrapper {
  position: relative;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  width: 100%;
  overflow-y: hidden;
}

.section--search {
  padding-bottom: 0;
}

.search-form {
  margin-bottom: 1rem;
  border: 2px solid var(--c-grey);
  border-radius: 2px;
  transition: border-color var(--transition-speed);
}

.search-form:focus-within {
  border-color: var(--c-accent);
}

.search-form input {
  width: 100%;
  padding: 1rem;
  border: none;
  font-size: 1rem;
}

.search-form input:focus {
  outline: none;
}

/* Pokemon List */
.pokemon-wrapper {
  position: relative;
  flex-grow: 1;
  padding: 1rem;
  border: 2px solid var(--c-grey);
  border-radius: 2px;
  overflow-y: scroll;
  transition: border-color var(--transition-speed);
}

.pokemon-wrapper:hover,
.pokemon-wrapper:focus-within {
  border-color: var(--c-accent);
}

.pokemon-list {
  margin: 0;
  list-style: none;
  padding-left: 0;
}

.pokemon-list > * + * {
  margin-top: 1rem;
}

.pokemon-list__item {
  display: block;
  padding: 10px;
  border-radius: 2px;
  background: var(--c-grey);
  text-transform: capitalize;
}

.placeholder-list-text {
  text-align: center;
}


/* Pokeball Loading Icon */
.pokeball {
  --translate: translate(-50%, -50%);
  --rotateFrom: rotate(0deg);
  --rotateTo: rotate(360deg);
  position: absolute;
  top: 50%;
  left: 50%;
  width: 4rem;
  height: 4rem;
  border-radius: 50%;
  border: 3px solid var(--c-text);
  transform: var(--translate) var(--rotateFrom);
  overflow: hidden;
  animation: 3s linear infinite rotatePokeball;
}

.pokeball::before {
  position: absolute;
  width: 100%;
  height: 50%;
  background-color: var(--c-primary);
  content: '';
}

.pokeball__center-border {
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  height: 3px;
  background-color: var(--c-text);
  transform: translateY(-50%);
}

.pokeball__center-circle {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 1rem;
  height: 1rem;
  border: 2px solid var(--c-text);
  border-radius: 50%;
  background-color: var(--c-white);
  transform: translate(-50%, -50%);
}

@keyframes rotatePokeball {
  from { transform: var(--translate) var(--rotateFrom); }
  to { transform: var(--translate) var(--rotateTo); }
}
